leaflet( data = df ) %>%
addProviderTiles( provider = "Esri.WorldTopoMap" ) %>%
registerPlugin( plugin = rotatedMarker ) %>%
addCircleMarkers( lng = ~lon
, lat = ~lat
, radius = 10
, fillColor = "orange"
, fillOpacity = 1
, stroke = FALSE ) %>%
addMarkers( lng = ~lon
, lat = ~lat
, label = ~boatName
, icon = north.arrow.icon
, options = markerOptions( rotationAngle = ~cog ) )
library(Waternet)
df <-
structure(list(boatName = c("Conti Benguela", "Sunny Bay", "Sunny Horizon",
"FMT URLA", "Qi Xiang 22", "STI Solidarity"), lat = c(37.115365,
38.4772017, 14.632, 56.80515, 51.31172, -2.2783283), lon = c(15.2682183,
-8.7888783, -79.5806667, 7.601885, -143.5678933, 46.6328383),
cog = c("16", "331", "182", "21", "288", "72")), row.names = c(NA,
6L), class = "data.frame")
# display leaflet map
leaflet( data = df ) %>%
addProviderTiles( provider = "Esri.WorldTopoMap" ) %>%
registerPlugin( plugin = rotatedMarker ) %>%
addCircleMarkers( lng = ~lon
, lat = ~lat
, radius = 10
, fillColor = "orange"
, fillOpacity = 1
, stroke = FALSE ) %>%
addMarkers( lng = ~lon
, lat = ~lat
, label = ~boatName
, icon = north.arrow.icon
, options = markerOptions( rotationAngle = ~cog ) )
library(Waternet)
rotatedMarker <-
htmlDependency( name = "Leaflet.rotatedMarker" # note: this .js file has to be copied and stored in your current working directory
, version = "0.1.2"
, src = normalizePath( path = getwd() )
, script = "leaflet.rotatedMarker.js" )
# this is taken from: https://gist.github.com/jcheng5/c084a59717f18e947a17955007dc5f92
# registerPlugin <- function(map, plugin) {
#   map$dependencies <- c(map$dependencies, list(plugin))
#   map
# }
df <-
structure(list(boatName = c("Conti Benguela", "Sunny Bay", "Sunny Horizon",
"FMT URLA", "Qi Xiang 22", "STI Solidarity"), lat = c(37.115365,
38.4772017, 14.632, 56.80515, 51.31172, -2.2783283), lon = c(15.2682183,
-8.7888783, -79.5806667, 7.601885, -143.5678933, 46.6328383),
cog = c("16", "331", "182", "21", "288", "72")), row.names = c(NA,
6L), class = "data.frame")
# make north arrow icon
north.arrow.icon <-
makeIcon( iconUrl = "uparrow.svg"
, iconWidth = 10
, iconHeight = 10 )
library(Waternet)
# display leaflet map
leaflet( data = df ) %>%
addProviderTiles( provider = "Esri.WorldTopoMap" ) %>%
registerPlugin( plugin = rotatedMarker ) %>%
addCircleMarkers( lng = ~lon
, lat = ~lat
, radius = 10
, fillColor = "orange"
, fillOpacity = 1
, stroke = FALSE ) %>%
addMarkers( lng = ~lon
, lat = ~lat
, label = ~boatName
, icon = north.arrow.icon
, options = markerOptions( rotationAngle = ~cog ) )
# end of script #
library(Waternet)
library(Waternet)
library(Waternet)
library(Waternet)
devtools::load_all(".")
warnings()
library(Waternet)
library(Waternet)
library(leaflet)
# create df with columns <filename> and <tag>:
lat  <- c(52, 53)
lon      <- c(8.89,9.1)
name <- c("pointing North", "Pointing East")
angle <- c(0,90)
value <- c(1,2)
df <- data.frame(name, angle, value, lat,lon)
bins <- c(0,1,2,Inf)
# Add leaflet map:
m <- leaflet() %>%
addProviderTiles(providers$Esri.WorldTopoMap)
m <- RotatedMarker.layer(m, df, "unit", "default-layer", bins)
getwd()
m <- RotatedMarker.layer(m, df, "unit", "default-layer", bins)
library(Waternet)
library(leaflet)
# create df with columns <filename> and <tag>:
lat  <- c(52, 53)
lon      <- c(8.89,9.1)
name <- c("pointing North", "Pointing East")
angle <- c(0,90)
value <- c(1,2)
df <- data.frame(name, angle, value, lat,lon)
bins <- c(0,1,2,Inf)
# Add leaflet map:
m <- leaflet() %>%
addProviderTiles(providers$Esri.WorldTopoMap)
m <- RotatedMarker.layer(m, df, "unit", "default-layer", bins)
library(Waternet)
library(leaflet)
# create df with columns <filename> and <tag>:
lat  <- c(52, 53)
lon      <- c(8.89,9.1)
name <- c("pointing North", "Pointing East")
angle <- c(0,90)
value <- c(1,2)
df <- data.frame(name, angle, value, lat,lon)
bins <- c(0,1,2,Inf)
# Add leaflet map:
m <- leaflet() %>%
addProviderTiles(providers$Esri.WorldTopoMap)
m <- RotatedMarker.layer(m, df, "unit", "default-layer", bins)
library(Waternet)
library(Waternet)
library(leaflet)
# create df with columns <filename> and <tag>:
lat  <- c(52, 53)
lon      <- c(8.89,9.1)
name <- c("pointing North", "Pointing East")
angle <- c(0,90)
value <- c(1,2)
df <- data.frame(name, angle, value, lat,lon)
bins <- c(0,1,2,Inf)
# Add leaflet map:
m <- leaflet() %>%
addProviderTiles(providers$Esri.WorldTopoMap)
m <- RotatedMarker.layer(m, df, "unit", "default-layer", bins)
library(Waternet)
library(Waternet)
library(leaflet)
# create df with columns <filename> and <tag>:
lat  <- c(52, 53)
lon      <- c(8.89,9.1)
name <- c("pointing North", "Pointing East")
angle <- c(0,90)
value <- c(1,2)
df <- data.frame(name, angle, value, lat,lon)
bins <- c(0,1,2,Inf)
# Add leaflet map:
m <- leaflet() %>%
addProviderTiles(providers$Esri.WorldTopoMap)
m <- RotatedMarker.layer(m, df, "unit", "default-layer", bins)
library(htmltools)
# create df with columns <filename> and <tag>:
lat  <- c(52, 53)
lon      <- c(8.89,9.1)
name <- c("pointing North", "Pointing East")
angle <- c(0,90)
value <- c(1,2)
bins <- c(0,1,2,Inf)
df <- data.frame(name, angle, value, lat,lon)
# Add leaflet map:
m <- leaflet() %>%
addProviderTiles(providers$Esri.WorldTopoMap)
m <- RotatedMarker.layer(m, df, "unit", "default-layer", bins)
library(htmlwidgets)
# Add leaflet map:
m <- leaflet() %>%
addProviderTiles(providers$Esri.WorldTopoMap)
m <- RotatedMarker.layer(m, df, "unit", "default-layer", bins)
library(Waternet)
library(Waternet)
library(leaflet)
library(htmltools)
library(htmlwidgets)
# create df with columns <filename> and <tag>:
lat  <- c(52, 53)
lon      <- c(8.89,9.1)
name <- c("pointing North", "Pointing East")
angle <- c(0,90)
value <- c(1,2)
df <- data.frame(name, angle, value, lat,lon)
bins <- c(0,1,2,Inf)
# Add leaflet map:
m <- leaflet() %>%
addProviderTiles(providers$Esri.WorldTopoMap)
m <- RotatedMarker.layer(m, df, "unit", "default-layer", bins)
library(Waternet)
library(Waternet)
library(leaflet)
library(htmltools)
library(htmlwidgets)
# create df with columns <filename> and <tag>:
lat  <- c(52, 53)
lon      <- c(8.89,9.1)
name <- c("pointing North", "Pointing East")
angle <- c(0,90)
value <- c(1,2)
df <- data.frame(name, angle, value, lat,lon)
bins <- c(0,1,2,Inf)
# Add leaflet map:
m <- leaflet() %>%
addProviderTiles(providers$Esri.WorldTopoMap)
m <- RotatedMarker.layer(m, df, "unit", "default-layer", bins)
library(Waternet)
library(Waternet)
library(leaflet)
library(htmltools)
library(htmlwidgets)
# create df with columns <filename> and <tag>:
lat  <- c(52, 53)
lon      <- c(8.89,9.1)
name <- c("pointing North", "Pointing East")
angle <- c(0,90)
value <- c(1,2)
df <- data.frame(name, angle, value, lat,lon)
bins <- c(0,1,2,Inf)
# Add leaflet map:
m <- leaflet() %>%
addProviderTiles(providers$Esri.WorldTopoMap)
m <- RotatedMarker.layer(m, df, "unit", "default-layer", bins)
m
### Add RotatedMarker to leaflet map:
library(Waternet)
library(leaflet)
library(htmltools)
library(htmlwidgets)
# create df with columns <filename> and <tag>:
lat  <- c(52, 53)
lon      <- c(8.89,9.1)
name <- c("pointing North", "Pointing East")
angle <- c(0,90)
value <- c(1,2)
df <- data.frame(name, angle, value, lat,lon)
bins <- c(0,1,2,Inf)
# Add leaflet map:
m <- leaflet() %>%
addProviderTiles(providers$Esri.WorldTopoMap)
m <- RotatedMarker.layer(m, df, "unit", "default-layer", bins)
m
# create df with columns <filename> and <tag>:
lat  <- c(52, 53)
lon      <- c(4.89,5.1)
name <- c("pointing North", "Pointing East")
angle <- c(0,90)
value <- c(1,2)
df <- data.frame(name, angle, value, lat,lon)
bins <- c(0,1,2,Inf)
# Add leaflet map:
m <- leaflet() %>%
addProviderTiles(providers$Esri.WorldTopoMap)
m <- RotatedMarker.layer(m, df, "unit", "default-layer", bins)
m
library(Waternet)
library(leaflet)
library(htmltools)
library(htmlwidgets)
# create df with columns <filename> and <tag>:
lat  <- c(52, 53)
lon      <- c(4.89,5.1)
name <- c("pointing North", "Pointing East")
angle <- c(0,90)
value <- c(1,2)
df <- data.frame(name, angle, value, lat,lon)
bins <- c(0,1,2,Inf)
# Add leaflet map:
m <- leaflet() %>%
addProviderTiles(providers$Esri.WorldTopoMap)
m <- RotatedMarker.layer(m, df, "unit", "default-layer", bins)
m
library(Waternet)
library(leaflet)
library(htmltools)
library(htmlwidgets)
# create df with columns <filename> and <tag>:
lat  <- c(52, 53)
lon      <- c(4.89,5.1)
name <- c("pointing North", "Pointing East")
angle <- c(0,90)
value <- c(1,2)
df <- data.frame(name, angle, value, lat,lon)
bins <- c(0,1,2,Inf)
# Add leaflet map:
m <- leaflet() %>%
addProviderTiles(providers$Esri.WorldTopoMap)
m <- RotatedMarker.layer(m, df, "unit", "default-layer", bins)
m
library(Waternet)
library(leaflet)
library(htmltools)
library(htmlwidgets)
# create df with columns <filename> and <tag>:
lat  <- c(52, 53)
lon      <- c(4.89,5.1)
name <- c("pointing North", "Pointing East")
angle <- c(0,90)
value <- c(1,2)
df <- data.frame(name, angle, value, lat,lon)
bins <- c(0,1,2,Inf)
# Add leaflet map:
m <- leaflet() %>%
addProviderTiles(providers$Esri.WorldTopoMap)
m <- RotatedMarker.layer(m, df, "unit", "pietje", bins)
m
m <- leaflet() %>%
addProviderTiles(providers$Esri.WorldTopoMap)
m <- RotatedMarker.layer(m, df, "m3/uur", "pietje", bins)
m
library(Waternet)
arr <- sobek2arr(filename = "DATA/testdata.his")
submod <- c("OXY", "Cl")
locmod <- c("LOX003","LOX009")
df <- arr2df(arr, locmod=locmod, submod=submod)
library(ggplot2)
plot <- ggplot(df, aes(time, value)) +
geom_line(aes(color = variable), size = 1) +
facet_grid((variable ~ location), scales = "free")
plot
library(Waternet)
submod <- c("OXY")
locmod <- c("LOX010")
df <- get_model_data("DATA/testdata.his", locmod, submod)
df.cum <- cum_values(df, debug=T)
library(ggplot2)
plot <- ggplot(df.cum, aes(time, value.cum)) +
geom_line(aes(color = variable), size = 1) +
facet_grid((variable ~ location), scales = "free")
plot
library(Waternet)
submod <- c("OXY")
locmod <- c("LOX010")
df <- get_model_data("DATA/testdata.his", locmod, submod)
df.cum <- cum_values(df, debug=T)
library(ggplot2)
plot <- ggplot(df.cum, aes(time, value.cum)) +
geom_line(aes(color = variable), size = 1) +
facet_grid((variable ~ location), scales = "free")
plot
library(Waternet)
### Get data, make cum value plot:
library(Waternet)
submod <- c("OXY")
locmod <- c("LOX010")
df <- get_model_data("DATA/testdata.his", locmod, submod)
df.cum <- cum_values(df, debug=T)
df$time[1]
year(df$time[1])
df.cum <- cum_values(df, debug=T)
df.cum <- cum_values(df, debug=T)
library(Waternet)
submod <- c("OXY")
locmod <- c("LOX010")
df <- get_model_data("DATA/testdata.his", locmod, submod)
df.cum <- cum_values(df, debug=T)
library(ggplot2)
plot <- ggplot(df.cum, aes(time, value.cum)) +
geom_line(aes(color = variable), size = 1) +
facet_grid((variable ~ location), scales = "free")
plot
library(Waternet)
library(Waternet)
submod <- c("OXY")
locmod <- c("LOX010")
df <- get_model_data("DATA/testdata.his", locmod, submod)
df.cum <- cum_values(df, debug=T)
### Get data, make cum value plot:
library(Waternet)
library(Waternet)
submod <- c("OXY")
locmod <- c("LOX010")
df <- get_model_data("DATA/testdata.his", locmod, submod)
df.cum <- cum_values(df, debug=T)
library(ggplot2)
plot <- ggplot(df.cum, aes(time, value.cum)) +
geom_line(aes(color = variable), size = 1) +
facet_grid((variable ~ location), scales = "free")
plot
library(Waternet)
submod <- c("OXY")
locmod <- c("LOX010")
df <- get_model_data("DATA/testdata.his", locmod, submod)
df.cum <- cum_values(df, debug=F)
library(ggplot2)
plot <- ggplot(df.cum, aes(time, value.cum)) +
geom_line(aes(color = variable), size = 1) +
facet_grid((variable ~ location), scales = "free")
plot
library(Waternet)
library(devtools)
install_github("EMMeijers/Waternet")
library(devtools)
install_github("EMMeijers/Waternet")
library(Waternet)
library(leaflet)
library(htmltools)
library(htmlwidgets)
# create df with columns <filename> and <tag>:
lat  <- c(52, 53)
lon      <- c(4.89,5.1)
name <- c("pointing North", "Pointing East")
angle <- c(0,90)
value <- c(1,2)
df <- data.frame(name, angle, value, lat,lon)
bins <- c(0,1,2,Inf)
# Add leaflet map:
m <- leaflet() %>%
addProviderTiles(providers$Esri.WorldTopoMap)
m <- RotatedMarker.layer(m, df, "m3/uur", "pietje", bins)
m
library(leaflet)
library(htmltools)
library(htmlwidgets)
# create df with columns <filename> and <tag>:
lat  <- c(52, 53)
lon      <- c(4.89,5.1)
name <- c("pointing North", "Pointing East")
angle <- c(0,90)
value <- c(1,2)
df <- data.frame(name, angle, value, lat,lon)
bins <- c(0,1,2,Inf)
# Add leaflet map:
m <- leaflet() %>%
addProviderTiles(providers$Esri.WorldTopoMap)
m <- RotatedMarker.layer(m, df, "m3/uur", "pietje", bins)
m
library(Waternet)
library(Waternet)
df <- parse_DELWAQ_monitor_file("c:/rundir/flows/B12_huidig_1214/monitor.dat")
library(Waternet)
df <- parse_DELWAQ_monitor_file("c:/rundir/flows/B12_huidig_1214/monitor.dat")
df
head(df)
library(Waternet)
library(devtools)
install_github("wstolte/DelwaqR")
library(Waternet)
library(Waternet)
library(Waternet)
library(Waternet)
library(Waternet)
library(Waternet)
library(Waternet)
library(Waternet)
library(Waternet)
arr <- sobek2arr(filename = "DATA/testdata.his")
submod <- c("OXY", "Cl")
locmod <- c("LOX003","LOX009")
df <- arr2df(arr, locmod=locmod, submod=submod)
library(ggplot2)
plot <- ggplot(df, aes(time, value)) +
geom_line(aes(color = variable), size = 1) +
facet_grid((variable ~ location), scales = "free")
plot
### Get vars, locations
get_data_locs(arr)
get_data_vars(arr)
arr <- sobek2arr(filename = "DATA/testdata.his")
### Get vars, locations
get_data_locs(arr)
tmp <- get_data_locs(arr)
tmp
library(Waternet)
library(Waternet)
locs <- get_his_locs("DATA/testdata.his")
locs
library(Waternet)
locs <- get_his_locs("DATA/testdata.his")
locs
data <- sobek2arr("DATA/testdata.his")
data <- sobek2arr("DATA/testdata.his")
library(Waternet)
locs <- get_his_locs("DATA/testdata.his")
locs
library(Waternet)
library(Waternet)
locs <- get_his_locs("DATA/testdata.his")
vars <- get_his_vars("DATA/testdata.his")
vars
library(Waternet)
2.88*3600
??melt()
library(Waternet)
library(Waternet)
library(Waternet)
library(Waternet)
tmp <- OpenHISFile("DATA/testdata.his")
View(tmp)
tmp$T0
tmp$Header
library(Waternet)
library(Waternet)
tmp <- OpenHISFile("DATA/testdata.his")
library(Waternet)
tmp <- OpenHISFile("DATA/testdata.his")
tmp$Header
library(Waternet)
tmp <- OpenHISFile("DATA/testdata.his")
tmp$Header
tmp$T0
library(Waternet)
tmp <- OpenHISFile("DATA/testdata.his")
tmp$Header
tmp$T0
tmp$TUnit
tmp$TStep
tmp$NTimes*7*86400
