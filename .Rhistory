data <- sobek2arr(filename)
tim.attr <- attr(data, 'dimnames')[[1]] ## times
loc.attr <- attr(data, 'dimnames')[[2]] ## locations
var.attr <- attr(data, 'dimnames')[[3]] ## substances
c.locs <- setdiff(locs, loc.attr)
if (length(c.locs) != 0) {
print(paste("Location is missing:",setdiff(locs, loc.attr)))
print(paste("available: ", loc.attr))}
c.subs <- setdiff(vars, var.attr)
if (length(c.subs) != 0) {
print(paste("Variable is missing:",setdiff(vars, var.attr)))
print(paste("available: ", var.attr))}
rundata <- arr2df(data,as.character(locs),vars) %>%
na.omit()
rm(data)
return(rundata)
}
test <- get_model_data("DATA/testdata.his", locmod, submod)
View(test)
library(devtools)
install_github("EMMeijers/Waternet")
library(devtools)
install_github("EMMeijers/Waternet")
??get_model_results
library(Waternet)
??get_model_results
??get_model_results()
??get_model_data
get_runs_data <- function(runs, locs, vars) {
list.tmp <- list()
ilist <- 1
#Model runs, loop, read results per run, add runidentifier as "tag":
for (irun in 1:nrow(runs)){
fn <- runs$filename[irun]
tmp <- get_model_data(fn, locs, vars)
# add tag to df:
tmp$run <- runs$tag[irun]
list.tmp[[ilist]] <- tmp
# Increase counter for resullts list
ilist <- ilist + 1
rm(data)
}
rundata <- do.call("rbind",list.tmp) #combine all vectors into a matrix
return(rundata)
}
filename  <- c("DATA/testdata.his",
"DATA/testdata2.his")
tag      <- c("B11 - 2012 - 2014",
"B12 - 2017 - 2018")
runs <- data.frame(resultdirs, tags)
runs <- data.frame(filename, tag)
submod <- c("OXY", "Cl")
locmod <- c("LOX003","LOX009")
df <- get_runs_data(runs, locmod, submod)
get_runs_data <- function(runs, locs, vars) {
list.tmp <- list()
ilist <- 1
#Model runs, loop, read results per run, add runidentifier as "tag":
for (irun in 1:nrow(runs)){
fn <- runs$filename[irun]
print(fn)
tmp <- get_model_data(fn, locs, vars)
# add tag to df:
tmp$run <- runs$tag[irun]
list.tmp[[ilist]] <- tmp
# Increase counter for resullts list
ilist <- ilist + 1
rm(data)
}
rundata <- do.call("rbind",list.tmp) #combine all vectors into a matrix
return(rundata)
}
df <- get_runs_data(runs, locmod, submod)
getwd()
get_runs_data <- function(runs, locs, vars) {
list.tmp <- list()
ilist <- 1
#Model runs, loop, read results per run, add runidentifier as "tag":
for (irun in 1:nrow(runs)){
fn <- as.character(runs$filename[irun])
print(fn)
tmp <- get_model_data(fn, locs, vars)
# add tag to df:
tmp$run <- runs$tag[irun]
list.tmp[[ilist]] <- tmp
# Increase counter for resullts list
ilist <- ilist + 1
rm(data)
}
rundata <- do.call("rbind",list.tmp) #combine all vectors into a matrix
return(rundata)
}
df <- get_runs_data(runs, locmod, submod)
df <- get_runs_data(runs, locmod, submod)
get_runs_data <- function(runs, locs, vars) {
list.tmp <- list()
ilist <- 1
#Model runs, loop, read results per run, add runidentifier as "tag":
for (irun in 1:nrow(runs)){
fn <- as.character(runs$filename[irun])
print(fn)
tmp <- get_model_data(fn, locs, vars)
# add tag to df:
tmp$run <- runs$tag[irun]
list.tmp[[ilist]] <- tmp
# Increase counter for resullts list
ilist <- ilist + 1
}
rundata <- do.call("rbind",list.tmp) #combine all vectors into a matrix
return(rundata)
}
df <- get_runs_data(runs, locmod, submod)
plot <- ggplot(df, aes(time, value)) +
geom_line(aes(color = tag), size = 1) +
facet_grid((variable ~ location), scales = "free")
plot
library(ggplot2)
plot <- ggplot(df, aes(time, value)) +
geom_line(aes(color = tag), size = 1) +
facet_grid((variable ~ location), scales = "free")
plot
get_runs_data <- function(runs, locs, vars) {
list.tmp <- list()
ilist <- 1
#Model runs, loop, read results per run, add runidentifier as "tag":
for (irun in 1:nrow(runs)){
fn <- as.character(runs$filename[irun])
print(fn)
tmp <- get_model_data(fn, locs, vars)
# add tag to df:
tmp$tag <- runs$tag[irun]
list.tmp[[ilist]] <- tmp
# Increase counter for resullts list
ilist <- ilist + 1
}
rundata <- do.call("rbind",list.tmp) #combine all vectors into a matrix
return(rundata)
}
df <- get_runs_data(runs, locmod, submod)
library(ggplot2)
plot <- ggplot(df, aes(time, value)) +
geom_line(aes(color = tag), size = 1) +
facet_grid((variable ~ location), scales = "free")
plot
chk <- c("filename", "tag")
chk %in% names(runs)
chk[1] %in% names(runs)
get_runs_data <- function(runs, locs, vars) {
# check on column names:
`%not_in%` <- Negate(`%in%`)
if ("filename" %not_in% names(runs) | "tag" %not_in% names(run)) {
print("columns in runs dataframe are:")
print(names(runs))
stop("runs dataframe is either missing the <filename> or <run> column")
}
list.tmp <- list()
ilist <- 1
#Model runs, loop, read results per run, add runidentifier as "tag":
for (irun in 1:nrow(runs)){
fn <- as.character(runs$filename[irun])
print(fn)
tmp <- get_model_data(fn, locs, vars)
# add tag to df:
tmp$tag <- runs$tag[irun]
list.tmp[[ilist]] <- tmp
# Increase counter for resullts list
ilist <- ilist + 1
}
rundata <- do.call("rbind",list.tmp) #combine all vectors into a matrix
return(rundata)
}
filename  <- c("DATA/testdata.his",
"DATA/testdata2.his")
tag2      <- c("run 1",
"run 2")
runs <- data.frame(filename, tag2)
submod <- c("OXY", "Cl")
locmod <- c("LOX003","LOX009")
df <- get_runs_data(runs, locmod, submod)
get_runs_data <- function(runs, locs, vars) {
# check on column names:
`%not_in%` <- Negate(`%in%`)
if ("filename" %not_in% names(runs) | "tag" %not_in% names(run)) {
print("columns in runs dataframe are:")
print(names(runs))
stop("runs dataframe is either missing the <filename> or <run> column")
}
list.tmp <- list()
ilist <- 1
#Model runs, loop, read results per run, add runidentifier as "tag":
for (irun in 1:nrow(runs)){
fn <- as.character(runs$filename[irun])
print(fn)
tmp <- get_model_data(fn, locs, vars)
# add tag to df:
tmp$tag <- runs$tag[irun]
list.tmp[[ilist]] <- tmp
# Increase counter for resullts list
ilist <- ilist + 1
}
rundata <- do.call("rbind",list.tmp) #combine all vectors into a matrix
return(rundata)
}
df <- get_runs_data(runs, locmod, submod)
runs <- data.frame(filename, tag2)
get_runs_data <- function(runs, locs, vars) {
# check on column names:
`%not_in%` <- Negate(`%in%`)
if ("filename" %not_in% names(runs) | "tag" %not_in% names(run)) {
print("columns in runs dataframe are:")
print(names(runs))
stop("runs dataframe is either missing the <filename> or <run> column")
}
list.tmp <- list()
ilist <- 1
#Model runs, loop, read results per run, add runidentifier as "tag":
for (irun in 1:nrow(runs)){
fn <- as.character(runs$filename[irun])
print(fn)
tmp <- get_model_data(fn, locs, vars)
# add tag to df:
tmp$tag <- runs$tag[irun]
list.tmp[[ilist]] <- tmp
# Increase counter for resullts list
ilist <- ilist + 1
}
rundata <- do.call("rbind",list.tmp) #combine all vectors into a matrix
return(rundata)
}
df <- get_runs_data(runs, locmod, submod)
get_runs_data <- function(runs, locs, vars) {
# check on column names:
`%not_in%` <- Negate(`%in%`)
if ("filename" %not_in% names(runs) | "tag" %not_in% names(run)) {
#print("columns in runs dataframe are:")
#print(names(runs))
stop("runs dataframe is either missing the <filename> or <run> column")
}
list.tmp <- list()
ilist <- 1
#Model runs, loop, read results per run, add runidentifier as "tag":
for (irun in 1:nrow(runs)){
fn <- as.character(runs$filename[irun])
print(fn)
tmp <- get_model_data(fn, locs, vars)
# add tag to df:
tmp$tag <- runs$tag[irun]
list.tmp[[ilist]] <- tmp
# Increase counter for resullts list
ilist <- ilist + 1
}
rundata <- do.call("rbind",list.tmp) #combine all vectors into a matrix
return(rundata)
}
df <- get_runs_data(runs, locmod, submod)
get_runs_data <- function(runs, locs, vars) {
# check on column names:
`%not_in%` <- Negate(`%in%`)
if (("filename" %not_in% names(runs)) | ("tag" %not_in% names(run))) {
#print("columns in runs dataframe are:")
#print(names(runs))
stop("runs dataframe is either missing the <filename> or <run> column")
}
list.tmp <- list()
ilist <- 1
#Model runs, loop, read results per run, add runidentifier as "tag":
for (irun in 1:nrow(runs)){
fn <- as.character(runs$filename[irun])
print(fn)
tmp <- get_model_data(fn, locs, vars)
# add tag to df:
tmp$tag <- runs$tag[irun]
list.tmp[[ilist]] <- tmp
# Increase counter for resullts list
ilist <- ilist + 1
}
rundata <- do.call("rbind",list.tmp) #combine all vectors into a matrix
return(rundata)
}
df <- get_runs_data(runs, locmod, submod)
get_runs_data <- function(runs, locs, vars) {
# check on column names:
`%not_in%` <- Negate(`%in%`)
if ("filename" %not_in% names(runs)) ("tag" %not_in% names(run))) {
stop("runs dataframe is either missing the <filename> column")
}
if ("tag" %not_in% names(runs)) {
stop("runs dataframe is either missing the <run> column")
}
list.tmp <- list()
ilist <- 1
#Model runs, loop, read results per run, add runidentifier as "tag":
for (irun in 1:nrow(runs)){
fn <- as.character(runs$filename[irun])
print(fn)
tmp <- get_model_data(fn, locs, vars)
# add tag to df:
tmp$tag <- runs$tag[irun]
list.tmp[[ilist]] <- tmp
# Increase counter for resullts list
ilist <- ilist + 1
}
rundata <- do.call("rbind",list.tmp) #combine all vectors into a matrix
return(rundata)
}
df <- get_runs_data(runs, locmod, submod)
get_runs_data <- function(runs, locs, vars) {
# check on column names:
`%not_in%` <- Negate(`%in%`)
if ("filename" %not_in% names(runs)) ("tag" %not_in% names(run))) {
stop("runs dataframe is either missing the <filename> column")
}
if ("tag" %not_in% names(runs)) {
stop("runs dataframe is either missing the <run> column")
}
list.tmp <- list()
ilist <- 1
#Model runs, loop, read results per run, add runidentifier as "tag":
for (irun in 1:nrow(runs)){
fn <- as.character(runs$filename[irun])
print(fn)
tmp <- get_model_data(fn, locs, vars)
# add tag to df:
tmp$tag <- runs$tag[irun]
list.tmp[[ilist]] <- tmp
# Increase counter for resullts list
ilist <- ilist + 1
}
rundata <- do.call("rbind",list.tmp) #combine all vectors into a matrix
return(rundata)
}
get_runs_data <- function(runs, locs, vars) {
# check on column names:
`%not_in%` <- Negate(`%in%`)
if ("filename" %not_in% names(runs)) ("tag" %not_in% names(run))) {
stop("runs dataframe is either missing the <filename> column")
}
if ("tag" %not_in% names(runs)) {
stop("runs dataframe is either missing the <run> column")
}
list.tmp <- list()
ilist <- 1
#Model runs, loop, read results per run, add runidentifier as "tag":
for (irun in 1:nrow(runs)){
fn <- as.character(runs$filename[irun])
print(fn)
tmp <- get_model_data(fn, locs, vars)
# add tag to df:
tmp$tag <- runs$tag[irun]
list.tmp[[ilist]] <- tmp
# Increase counter for resullts list
ilist <- ilist + 1
}
rundata <- do.call("rbind",list.tmp) #combine all vectors into a matrix
return(rundata)
}
get_runs_data <- function(runs, locs, vars) {
# check on column names:
`%not_in%` <- Negate(`%in%`)
if ("filename" %not_in% names(runs)) {
stop("runs dataframe is either missing the <filename> column")
}
if ("tag" %not_in% names(runs)) {
stop("runs dataframe is either missing the <run> column")
}
list.tmp <- list()
ilist <- 1
#Model runs, loop, read results per run, add runidentifier as "tag":
for (irun in 1:nrow(runs)){
fn <- as.character(runs$filename[irun])
print(fn)
tmp <- get_model_data(fn, locs, vars)
# add tag to df:
tmp$tag <- runs$tag[irun]
list.tmp[[ilist]] <- tmp
# Increase counter for resullts list
ilist <- ilist + 1
}
rundata <- do.call("rbind",list.tmp) #combine all vectors into a matrix
return(rundata)
}
df <- get_runs_data(runs, locmod, submod)
filename  <- c("DATA/testdata.his",
"DATA/testdata2.his")
tag      <- c("run 1",
"run 2")
runs <- data.frame(filename, tag)
submod <- c("OXY", "Cl")
locmod <- c("LOX003","LOX009")
df <- get_runs_data(runs, locmod, submod)
library(ggplot2)
plot <- ggplot(df, aes(time, value)) +
geom_line(aes(color = tag), size = 1) +
facet_grid((variable ~ location), scales = "free")
plot
library(devtools)
install_github("EMMeijers/Waternet")
library(Waternet)
# create df with columns <filename> and <tag>:
filename  <- c("DATA/testdata.his",
"DATA/testdata2.his")
tag      <- c("run 1",
"run 2")
runs <- data.frame(filename, tag)
submod <- c("OXY", "Cl")
locmod <- c("LOX003","LOX009")
df <- get_runs_data(runs, locmod, submod)
library(ggplot2)
plot <- ggplot(df, aes(time, value)) +
geom_line(aes(color = tag), size = 1) +
facet_grid((variable ~ location), scales = "free")
plot
??Waternet()
library(Waternet)
df <- get_runs_data(runs, locmod, submod)
df <- get_model_data("DATA/testdata.his", locmod, submod)
library(Waternet)
library(Waternet)
# create df with columns <filename> and <tag>:
filename  <- c("DATA/testdata.his",
"DATA/testdata2.his")
tag      <- c("run 1",
"run 2")
runs <- data.frame(filename, tag)
submod <- c("OXY", "Cl")
locmod <- c("LOX003","LOX009")
df <- get_runs_data(runs, locmod, submod)
library(ggplot2)
plot <- ggplot(df, aes(time, value)) +
geom_line(aes(color = tag), size = 1) +
facet_grid((variable ~ location), scales = "free")
plot
library(devtools)
install_github("EMMeijers/Waternet")
library(Waternet)
library(Waternet)
# create df with columns <filename> and <tag>:
filename  <- c("DATA/testdata.his",
"DATA/testdata2.his")
tag      <- c("run 1",
"run 2")
runs <- data.frame(filename, tag)
submod <- c("OXY", "Cl")
locmod <- c("LOX003","LOX009")
df <- get_runs_data(runs, locmod, submod)
library(ggplot2)
plot <- ggplot(df, aes(time, value)) +
geom_line(aes(color = tag), size = 1) +
facet_grid((variable ~ location), scales = "free")
plot
library(Waternet)
# create a list of all installed packages
ip <- as.data.frame(installed.packages())
head(ip)
# if you use MRO, make sure that no packages in this library will be removed
ip <- subset(ip, !grepl("MRO", ip$LibPath))
# we don't want to remove base or recommended packages either\
ip <- ip[!(ip[,"Priority"] %in% c("base", "recommended")),]
# determine the library where the packages are installed
path.lib <- unique(ip$LibPath)
# create a vector with all the names of the packages you want to remove
pkgs.to.remove <- ip[,1]
head(pkgs.to.remove)
# remove the packages
sapply(pkgs.to.remove, remove.packages, lib = path.lib)
install.packages("tidyverse")
install.packages("devtools")
library(devtools)
install_github("EMMeijers/Waternet")
library(Waternet)
arr <- sobek2arr(filename = "DATA/testdata.his")
submod <- c("OXY", "Cl")
locmod <- c("LOX003","LOX009")
df <- arr2df(arr, locmod=locmod, submod=submod)
library(ggplot2)
plot <- ggplot(df, aes(time, value)) +
geom_line(aes(color = variable), size = 1) +
facet_grid((variable ~ location), scales = "free")
plot
### Get vars, locations
get_data_locs(arr)
get_data_vars(arr)
library(Waternet)
df <- get_model_data("DATA/testdata.his", locmod, submod)
library(ggplot2)
plot <- ggplot(df, aes(time, value)) +
geom_line(aes(color = variable), size = 1) +
facet_grid((variable ~ location), scales = "free")
plot
library(Waternet)
# create df with columns <filename> and <tag>:
filename  <- c("DATA/testdata.his",
"DATA/testdata2.his")
tag      <- c("run 1",
"run 2")
runs <- data.frame(filename, tag)
submod <- c("OXY", "Cl")
locmod <- c("LOX003","LOX009")
df <- get_runs_data(runs, locmod, submod)
library(ggplot2)
plot <- ggplot(df, aes(time, value)) +
geom_line(aes(color = tag), size = 1) +
facet_grid((variable ~ location), scales = "free")
plot
View(get_runs_data)
fn  <- c("DATA/testdata.his",
"DATA/testdata2.his")
tag2      <- c("run 1",
"run 2")
runs2 <- data.frame(fn, tag2)
df <- get_runs_data(runs, locmod, submod)
df <- get_runs_data(runs2, locmod, submod)
